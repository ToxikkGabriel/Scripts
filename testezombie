local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local ExpectedArguments = {
	FindPartOnRayWithIgnoreList = {
		ArgCountRequired = 3,
		Args = {
			"Instance", "Ray", "table", "boolean", "boolean"
		}
	},
	FindPartOnRayWithWhitelist = {
		ArgCountRequired = 3,
		Args = {
			"Instance", "Ray", "table", "boolean"
		}
	},
	FindPartOnRay = {
		ArgCountRequired = 2,
		Args = {
			"Instance", "Ray", "Instance", "boolean", "boolean"
		}
	},
	Raycast = {
		ArgCountRequired = 3,
		Args = {
			"Instance", "Vector3", "Vector3", "RaycastParams"
		}
	}
}
local Target
function getTarget()
	local maxDist = 300
	Target = Vector3.new(0,0,0)
	if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.HumanoidRootPart then
		for i,v in pairs(game.Workspace["Zombie Storage"]:GetChildren()) do
			if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
				local dist = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				if dist <= maxDist then
					maxDist = dist
					Target = v.HumanoidRootPart.Position
				end
			end
		end
	end
end
spawn(function()
	while wait(0.1) do
		getTarget()
	end
end)

local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
	local Method = getnamecallmethod()
	local Arguments = {...}
	local self = Arguments[1]
	if Method == "FindPartOnRayWithIgnoreList" then
		local A_Ray = Arguments[2]
		local Origin = A_Ray.Origin
		local Direction = ((Origin - Target).Unit * -1) * 1000
		Arguments[2] = Ray.new(Origin, Direction)

		return oldNamecall(unpack(Arguments))
	end
	return oldNamecall(...)
end))
